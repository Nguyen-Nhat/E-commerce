server:
  port: 8087
  servlet:
    session:
      timeout: 30

spring:
  security:
    oauth2:
      client:
        registration:
          gateway:
            provider: provider
            client-id: client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - openid
            client-name: gateway
        provider:
          provider:
            #This configuration,resource server will not ping authorization server on startup
            authorization-uri: http://127.0.0.1:8086/oauth2/authorize
            token-uri: http://127.0.0.1:8086/oauth2/token
            jwk-set-uri: http://127.0.0.1:8086/oauth2/jwks
            user-info-uri: http://127.0.0.1:8086/userinfo

  cloud:
    gateway:
      routes:
        - id: product service
          uri: http://127.0.0.1:8080
          predicates:
            Path=/product/**
        - id: search service
          uri: http://127.0.0.1:8081
          predicates:
            Path=/search/**
      default-filters:
        - TokenRelay
        - RemoveRequestHeader=Cookie
  session:
    redis:
      flush-mode: on_save
      namespace: gateway:session
  data:
    redis:
      host: localhost
      port: 6379
      password:
